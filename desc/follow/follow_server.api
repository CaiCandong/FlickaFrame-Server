syntax = "v1"

info(
    title: "用户关注"
    desc: "用户关注"
    author: "caicandong"
    email: "caicandong@shu.edu.cn"
)

import  (
    "follow.api"
)

//need login
@server(
    prefix: api/v1
    group: follow
    jwt: JwtAuth
)
service main {
    @doc "Follow a user"
    @handler Follow
    put /user/following/:user_id (FollowReq) returns (FollowResp)

    @doc "Unfollow a user"
    @handler Unfollow
    delete /user/following/:user_id (UnFollowReq) returns (UnFollowResp)

    @doc "Check whether a user is followed by the authenticated user"
    @handler CheckMyFollowing
    get /user/following/:user_id (CheckMyFollowingReq) returns (CheckMyFollowingResp)

    @doc "List the users that the authenticated user is following"
    @handler ListMyFollowers
    get /user/followers (ListMyFollowersReq) returns (ListMyFollowersResp)

    @doc "List the users that the authenticated user is following"
    @handler ListMyFollowing
    get /user/following(ListMyFollowingReq) returns (ListMyFollowingResp)
}

//need login
@server(
    prefix: api/v1
    group: follow
)
service main {
    @doc "ListFollowers list the given user's followers"
    @handler ListFollowers
    get /users/:user_id/followers(ListFollowersReq) returns (ListFollowersResp)

    @doc "ListFollowing list the users that the given user is following"
    @handler ListFollowing
    get /users/:user_id/following(ListFollowingReq) returns (ListFollowingResp)

    @doc "CheckFollowing check if one user is following another user"
    @handler CheckFollowing
    get /users/:doer_id/following/:context_user_id(CheckFollowingReq) returns (CheckFollowingResp)

    @doc "Count the number of followers and following for the given user"
    @handler CountFollowers
    get /users/follow/:user_id/count(CountFollowReq) returns (CountFollowResp)
}
