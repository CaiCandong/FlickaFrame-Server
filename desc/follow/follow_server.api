syntax = "v1"

info(
	title: "用户关注"
	desc: "用户关注"
	author: "caicandong"
	email: "caicandong@shu.edu.cn"
)
//need login
@server(
	prefix: api/v1
	group: follow
	jwt: JwtAuth
)
service main {
	@doc "Follow a user"
	@handler Follow
	put /user/following/:user_id (FollowReq) returns (FollowResp)

	@doc "Unfollow a user"
	@handler Unfollow
	delete /user/following/:user_id (UnFollowReq) returns (UnFollowResp)

	@doc "Check whether a user is followed by the authenticated user"
	@handler CheckMyFollowing
	get /user/following/:user_id (CheckMyFollowingReq) returns (CheckMyFollowingResp)

	@doc "List the users that the authenticated user is following"
	@handler ListMyFollowers
	get /user/followers (ListMyFollowersReq) returns (ListMyFollowersResp)

	@doc "List the users that the authenticated user is following"
	@handler ListMyFollowing
	get /user/following(ListMyFollowingReq) returns (ListMyFollowingResp)
}

//need login
@server(
	prefix: api/v1
	group: follow
)
service main {
	@doc "ListFollowers list the given user's followers"
	@handler ListFollowers
	get /users/:user_id/followers(ListFollowersReq) returns (ListFollowersResp)

	@doc "ListFollowing list the users that the given user is following"
	@handler ListFollowing
	get /users/:user_id/following(ListFollowingReq) returns (ListFollowingResp)

	@doc "CheckFollowing check if one user is following another user"
	@handler CheckFollowing
	get /users/:doer_id/following/:context_user_id(CheckFollowingReq) returns (CheckFollowingResp)

	@doc "Count the number of followers and following for the given user"
	@handler CountFollowers
	get /users/follow/:user_id/count(CountFollowReq) returns (CountFollowResp)
}

type (
	CountFollowReq {
		ContextUserId uint `json:"userId" path:"user_id" desc:"用户id" validate:"required"`
	}
	CountFollowResp {
		FollowingCount int64 `json:"followingCount" desc:"关注数量"`
		FollowersCount int64 `json:"followerCount" desc:"粉丝数量"`
	}
)

type FollowUser {
	UserId   string `json:"userId" desc:"用户id"`
	UserName string `json:"userName" desc:"用户名"`
	Avatar   string `json:"avatar" desc:"头像"`
}

type (
	FollowReq {
		ContextUserId uint `json:"userId" path:"user_id" desc:"关注用户id" validate:"required"`
	}
	FollowResp {
	}
)

type (
	UnFollowReq {
		ContextUserId uint `json:"userId" path:"user_id" desc:"关注用户id" validate:"required"`
	}
	UnFollowResp {
	}
)

type (
	CheckMyFollowingReq {
		ContextUserId uint `json:"userId" path:"user_id" desc:"关注用户id" validate:"required"`
	}
	CheckMyFollowingResp {
		Status bool `json:"status" desc:"是否关注"`
	}
)

type (
	ListMyFollowersReq {
		Page  int `json:"page" desc:"页码" validate:"required"`
		Limit int `json:"limit" desc:"每页数量" validate:"required"`
	}
	ListMyFollowersResp {
		FollowUser []*FollowUser `json:"followers" desc:"用户id"`
	}
)

type (
	ListMyFollowingReq {
		Page  int `json:"page" desc:"页码" validate:"required"`
		Limit int `json:"limit" desc:"每页数量" validate:"required"`
	}
	ListMyFollowingResp {
		FollowUser []*FollowUser `json:"followers" desc:"用户id"`
	}
)

type (
	ListFollowersReq {
		ContextUserId uint `json:"userId" path:"user_id" desc:"用户id" validate:"required"`
		Page          int  `json:"page" desc:"页码" validate:"required"`
		Limit         int  `json:"limit" desc:"每页数量" validate:"required"`
	}
	ListFollowersResp {
		FollowUser []*FollowUser `json:"followers" desc:"用户id"`
	}
)

type (
	ListFollowingReq {
		ContextUserId uint `json:"userId" path:"user_id" desc:"用户id" validate:"required"`
		Page          int  `json:"page" desc:"页码" validate:"required"`
		Limit         int  `json:"limit" desc:"每页数量" validate:"required"`
	}
	ListFollowingResp {
		FollowUser []*FollowUser `json:"followers" desc:"用户id"`
	}
)

type (
	CheckFollowingReq {
		DoerUserId    uint `json:"doerUserId" path:"doer_user_id" desc:"用户id" validate:"required"`
		ContextUserId uint `json:"contextUserId" path:"doer_user_id" desc:"用户id" validate:"required"`
	}
	CheckFollowingResp {
		Status bool `json:"status" desc:"是否关注"`
	}
)