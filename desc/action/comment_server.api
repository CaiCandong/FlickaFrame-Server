syntax = "v1"

info(
	title: "用户关注"
	desc: "用户关注"
	author: "caicandong"
	email: "caicandong@shu.edu.cn"
)

@server(
	prefix: api/v1
	group: comment
)
service main {
	@doc "Get a specific comment of an Video"
	@handler GetVideoComment
	get /video/:video_id/comments/:comment_id (GetVideoCommentReq) returns (GetVideoCommentResp)

	@doc "List comments of an Video"
	@handler ListVideoComments
	get /video/:video_id/comments (ListVideoCommentsReq) returns (ListVideoCommentsResp)
}

@server(
	prefix: api/v1
	group: comment
	jwt: JwtAuth
)
service main {
	@doc "Create a comment for an Video"
	@handler CreateVideoComment
	put /video/:video_id/comments (CreateVideoCommentReq) returns (CreateVideoCommentResp)

	@doc "Delete a comment of an Video"
	@handler DeleteVideoComment
	delete /comments/:comment_id (DeleteVideoCommentReq) returns (DeleteVideoCommentResp)

	@doc "Edit comments of an Video"
	@handler EditVideoComment
	post /comments/:comment_id (EditVideoCommentReq) returns (EditVideoCommentResp)

	@doc "Create a reply for an Comment"
	@handler CreateReplyComment
	put /video/:video_id/reply (CreateReplyCommentReq) returns (CreateReplyCommentResp)
}

type CommentUserInfo {
	UserID   string `json:"userId"`
	Nickname string `json:"nickname"`
	Image    string `json:"image"`
}

type SubComments {
	ID         string `json:"id"`
	VideoID    string `json:"videoId"`
	Content    string `json:"content"`
	CreateTime int64  `json:"createTime"`
	Status     int    `json:"status"`

	AtUsers             []*CommentUserInfo   `json:"atUsers"`
	UserInfo            *CommentUserInfo     `json:"userInfo"`
	CommentInteractInfo *CommentInteractInfo `json:"commentInteractInfo"`
	ShowTags            []string             `json:"showTags"`
}

type TargetCommnet { // 回复的目标评论
	ID       string           `json:"id"`
	UserInfo *CommentUserInfo `json:"userInfo"`
}

type CommentInteractInfo {
	Liked      bool   `json:"liked"`      // 当前用户是否已点赞
	LikedCount string `json:"likedCount"` // 点赞数
}

type Commnent {
	ID         string `json:"id"`
	VideoID    string `json:"videoId"`
	Status     int    `json:"status"`
	Content    string `json:"content"`
	CreateTime int64  `json:"createTime"`

	UserInfo            *CommentUserInfo     `json:"userInfo"`
	CommentInteractInfo *CommentInteractInfo `json:"commentInteractInfo"`

	SubComments       []*SubComments `json:"subComments"`
	SubCommentCount   string         `json:"subCommentCount"`
	SubCommentHasMore bool           `json:"subCommentHasMore"`
	SubCommentCursor  string         `json:"subCommentCursor"`

	AtUsers  []*CommentUserInfo `json:"atUsers"`
	ShowTags []string           `json:"showTags"`

	IPAddress string `json:"ipAddress"`
}

type (
	CreateVideoCommentReq {
		Content string `json:"content"`
		VideoId int64  `json:"videoId" path:"video_id"`
	}

	CreateVideoCommentResp {
		Commnent *Commnent `json:"comment"`
	}
)

type (
	GetVideoCommentReq {
		VideoId   int64 `json:"videoId" path:"video_id"`
		CommentId int64 `json:"commentId" path:"comment_id"`
	}

	GetVideoCommentResp {
		Commnent *Commnent `json:"comment"`
	}
)

type (
	DeleteVideoCommentReq {
		VideoId   int64 `json:"videoId" path:"video_id"`
		CommentId int64 `json:"commentId" path:"comment_id"`
	}

	DeleteVideoCommentResp {
	}
)

type (
	EditVideoCommentReq {
		VideoId   int64  `json:"videoId" path:"video_id"`
		CommentId int64  `json:"commentId" path:"comment_id"`
		Content   string `json:"content"`
	}

	EditVideoCommentResp {
	}
)

type (
	ListVideoCommentsReq {
		VideoId int64 `json:"videoId" path:"video_id"`
	}

	ListVideoCommentsResp {
		CreatedAt string      `json:"createdAt"`
		UserID    string      `json:"userId"`
		Comments  []*Commnent `json:"comments"`
	}
)

type (
	CreateReplyCommentReq {
		Content  string `json:"content"`
		VideoId  int64  `json:"videoId" path:"video_id"`
		ParentId int64  `json:"parentId"`
		TargetId int64  `json:"targetId"`
	}

	CreateReplyCommentResp {
		Commnent *Commnent `json:"comment"`
	}
)