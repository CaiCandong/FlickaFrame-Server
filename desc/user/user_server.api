syntax = "v1"

info(
	title: "用户中心服务"
	desc: "用户中心服务"
	version: "v1"
)
// Need login
@server(
	prefix: api/v1
	group: user
	jwt: JwtAuth
)
service main{
	@doc "Get User Info Detail"
	@handler detail
	get /user/detail (UserInfoReq) returns (UserInfoResp)

	@doc "Update User Avatar"
	@handler UpdateAvatar
	post  /user/avatar (UpdateAvatarReq) returns (UpdateAvatarResp)
}

//no need login
@server(
	prefix: api/v1
	group: user
)
service main {
	@doc "Register User"
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)

	@doc "Login User"
	@handler login
	post /user/login (LoginReq) returns (LoginResp)

	@doc "List User Ranking"
	@handler Ranking
	get /user/ranking (RankingReq) returns (RankingResp)
}

type User {
	ID        int64  `json:"id"`
	Phone     string `json:"phone"`
	NickName  string `json:"nickName"`
	Sex       int64  `json:"sex"`
	AvatarUrl string `json:"avatarUrl"`
	Info      string `json:"info"`
}

type (
	RegisterReq {
		Phone    string `json:"phone" validate:"required"`
		Password string `json:"password" validate:"required"`
		NickName string `json:"nickName,option"`
	}
	RegisterResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	LoginReq {
		Phone    string `json:"phone"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	UserInfoReq {
	}
	UserInfoResp {
		UserInfo User `json:"userInfo"`
	}
)

type (
	UpdateAvatarReq {
		// image must be base64 encoded
		Image string `json:"image" binding:"Required"`
	}
	UpdateAvatarResp {
	}
)

type (
	RankingReq {
		PageSize int  `form:"pageSize"` // 分页大小,默认为 10
		Page     int  `form:"page"`     // 当前页码,默认为 1
		ListAll  bool `form:"listAll"`  // 是否列出所有,默认为 false
	}
	RankingResp {
		Users []*User `json:"users"`
	}
)